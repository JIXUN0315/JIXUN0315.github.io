@model IEnumerable<Hatsukoi.Models.Dtos.Create.ProductSubCategoryDto>


@{
    Layout = "~/Views/Shared/_Layout_Back.cshtml";

    var bigList = Model.Select(x => x.CategoryName).Distinct();

    var aaa = Model.FirstOrDefault(x => x.TagName == x.TagName).TagName;

}


<!-- Load polyfills to support older browsers -->
<script src="https://polyfill.io/v3/polyfill.min.js?features=es2015%2CIntersectionObserver" crossorigin="anonymous"></script>

<!-- Load Vue followed by BootstrapVue -->
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js"></script>

<!-- Load the following for BootstrapVueIcons support -->
<script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue-icons.min.js"></script>

<div class="container three" id="app" v-cloak>
    <div class="row xxx">
        <div class="col-12 col-md-8 build-product-main ">
            <div class="build-product-div">
                <div class="build-product-introduce col-md-4 p-2">
                    <h2>商品圖片</h2>
                    <p>最多可以上傳4張商品圖片(最少3張)，上傳前請先務必閱讀 圖片上傳規範</p>
                </div>
                <div class="build-product-item col-12 col-md-8 ">
                    <label for="formFile" class="p-2">
                        <div class="pic">
                            <span class="border d-flex justify-content-center align-items-center p-5" v-if="preview_list.length =='' ">請上傳圖片</span>
                            <div class="d-flex picBox " v-if="preview_list.length">
                                <div class="box " v-for="(item,index) in preview_list">
                                    <img :src="item" alt="" />
                                </div>
                            </div>
                        </div>
                    </label>
                    <input class="d-none" type="file" id="formFile" accept="image/*" multiple="multiple" v-on:change="previewImage">
                    <p class="build-product-del"><i class="fa-regular fa-trash-can" v-on:click="clearImg">刪除全部圖片</i></p>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-8 build-product-main ">
            <div class="build-product-div">
                <!-- 多一個空間 -->
                <div class="col-md-4">
                    <h2>商品基本資訊</h2>
                </div>
                <div class="build-product-item col-12 col-md-8 p-2">
                    <div class="d-flex justify-content-between">
                        <label for="inputPassword5" class="form-label d-flex required">商品名稱(繁體中文)</label>
                        <span class="text-danger ">{{ warnPassword }}</span>
                    </div>
                    <input class="form-control" aria-describedby="passwordHelpBlock" v-model="nameVal"
                           maxlength="30" id="productName">
                    <div id="passwordHelpBlock" class="form-text">
                        每個中文字的長度會以2做計算 <span class="text-danger">{{ checkNumber }}</span>/60
                    </div>

                    <div class="build-product-category">
                        <select class="form-select " id="selectCategory" v-on:change="changeCatefory">
                            <option>選擇商品主分類</option>
                            @foreach (var c in bigList)
                            {
                                <option value="@c" class="category">@c</option>
                            }
                        </select>
                        <select class="form-select sub-category" aria-label="Default select example" disabled v-model="subCategory" id="subCategory">
                            <option>選擇商品子分類</option>
                            @foreach (var s in Model)
                            {
                                <option value=" @s.SubCategoryName" class="subCategoryOption d-none" data-num="@s.CategoryName">@s.SubCategoryName</option>
                            }

                        </select>
                    </div>
                    <div class="build-product-total">
                        <span class="required">價格(NT$) {{ priceWarn }}</span><br>
                        <input type="text" class="form-control" v-model="priceVal" id="priceValue" />
                    </div>
                    <div class="build-product-detail">
                        <span>商品產地</span>
                        <select class="form-select " v-model="madeCountry" aria-label="Default select example">
                            <option>產地</option>
                            <option value="台灣">台灣</option>
                            <option value="中國大陸">中國大陸</option>
                            <option value="日本">日本</option>
                            <option value="義大利">義大利</option>
                        </select>
                        <span class="required">商品規格</span>
                        <div class="d-flex">
                            <div class="col-6 col-md-6 inputDivOne">
                                <input class="form-control " type="text" placeholder="例如: 尺寸"
                                       aria-label="default input example" maxlength="25" v-model="firstSpecification">
                                <div class="addOne">
                                    <!-- 動態新增input -->
                                </div>
                                <div>
                                    <button v-on:click="addInputOne" class="btnOne btn btn-primary  ">添加</button>
                                </div>
                            </div>
                            <div class="col-6 col-md-6 inputDivTwo">
                                <input class="form-control mx-2" type="text"  placeholder="例如: 顏色"
                                       aria-label="default input example" maxlength="25" v-model="secondSpecification">
                                <div class="addTwo">
                                    <!-- 動態新增input -->
                                </div>
                                <div class="d-flex justify-content-end">
                                    <button v-on:click="addInputTwo" class="btnTwo  btn btn-primary">添加</button>
                                </div>
                            </div>
                        </div>
                        <div>
                            <div class=" d-flex justify-content-center">
                                <button class="btn btn-primary btn-mix mt-5" v-on:click="SpecificationMix">規格整合</button>
                            </div>
                            <div class="mix py-3">
                                <!-- 動態新增規格MIX -->
                            </div>
                        </div>
                        <p class="spe">請至少填一項規格。<br>例如「顏色」或者「尺寸」。<br>規格整合後的單價，請記得『全部』都要輸入<br><span class="text-danger">注意規格選填後是無法修改</span></p>
                        <div>
                            <span>商品標籤</span>
                            @foreach (var a in aaa)
                            {
                                <div class="form-check">
                                    <input class="form-check-input tagOne" type="checkbox" id="flexCheckDefault5" value="@a">
                                    <label class="form-check-label " for="flexCheckDefault5">
                                        @a
                                    </label>
                                </div>
                            }
                        </div>
                        <p>請勾選產品適合的標籤。</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-4 build-product-div-little ">
            <p>請至少填一項規格。<br>例如「顏色」或者「尺寸」。<br>規格整合後的單價，請記得『全部』都要輸入<br><span class="text-danger">注意規格選填後是無法修改</span></p>
        </div>
        <div class="col-12 col-md-8 build-product-main">
            <div class="build-product-div">
                <div class="col-md-4 p-2">
                    <h2>商品摘要與敘述</h2>
                </div>
                <div class="build-product-item col-12 col-md-8 p-2 ">
                    <p>商品摘要(繁體中文)</p>
                    <textarea class="form-control " id="description" rows="3" maxlength="200" v-model="description"></textarea>
                    <p>商品摘要是顯示於搜尋引擎結果的文字，應包含商品名稱、屬性。好的商品摘要對於提升商品的曝光量有很大的幫助，並讓買家在短時間內了解商品資訊，提升商品業的點擊率。</p>
                    <P class="required">商品敘述(繁體中文)</P>
                </div>
            </div>

        </div>
        <div class="col-12 col-md-4 build-product-div-little">
            <p>商品摘要是顯示於搜尋引擎結果的文字，應包含商品名稱、屬性。好的商品摘要對於提升商品的曝光量有很大的幫助，並讓買家在短時間內了解商品資訊，提升商品業的點擊率。</p>
        </div>

        <div class="buttons fixed-bottom justify-content-end">
            <b-overlay class="d-flex justify-content-center" :show="isbusy">
                <template #overlay>
                    <div class="text-center text-danger my-2">
                        <b-spinner class="align-middle">
                        </b-spinner>
                        <strong>Loading...</strong>
                    </div>
                </template>
                <b-input-group v-bind:aria-hidden="!isbusy">
                    <button class="btn btn-update " :disabled="isDisabled" v-on:click="record">預覽</button>
                </b-input-group>
            </b-overlay>
        </div>

        <div class="form-group col-md-12">
            <label class="control-label"></label>
            <div class="form-control" id="editor">
            </div>
        </div>
        <p class="d-flex justify-content-end">如按鈕不能按，代表有未填項目。</p>
    </div>

</div>

<script>
    let inputNumberOne = []
    let inputNumberTwo = []
    let aa = []
    let inputOneItem = []
    let inputTwoItem = []
    tagSet = new Set()
    let tagArr = []

    const app = new Vue({
        el: '#app',
        data: {
            nameVal: '',
            warnPassword: '',
            priceVal: '',
            checkNumber: '',
            subCategory: '選擇商品子分類',
            //規格部分
            firstSpecification: '',
            secondSpecification: '',
            firstSepcItem: '',
            secondSepcItem: '',
            unitPrice: '',
            //-----------------------
            description: '',
            editor: '',
            madeCountry: '產地',
            nameWarn: '',
            priceWarn: '',
            numberVal: '',
            inputVal: '',
            warntext: '',
            isSpeMix: false,
            //預覽照片
            preview_list: [],
            image_list: [],
            isbusy: false,
        },
        watch: {
            nameVal: {
                immediate: true,
                handler() {
                    let r1 = /^[a-zA-Z0-9]*$/
                    if (r1.test(this.nameVal)) {
                        this.warnPassword = '只能是中文'
                        this.nameVal = ''
                    } else {
                        this.warnPassword = ''
                    }

                    if (this.nameVal == 0) {
                        this.checkNumber = 60
                    } else {
                        this.checkNumber = 60 - (this.nameVal.length * 2)
                    }
                }
            },
            priceVal: function () {
                let r = /^[0-9]*$/
                if (!r.test(this.priceVal)) {
                    this.priceVal = ''
                }
            },
        },
        computed: {
            isDisabled() {
                if (this.nameVal && this.priceVal && this.firstSpecification && this.isSpeMix && this.image_list) {
                    return false
                } else {
                    return true
                }
            }
        },
        methods: {
            addInputOne: function () {
                let btnOne = document.querySelector('.btnOne')
                let addOne = document.querySelector('.addOne')
                let input = document.createElement('input')
                input.setAttribute('class', 'form-control inputOne ')
                //input.setAttribute('placeholder', '內容')
                input.setAttribute('placeholder', '例如: 大、小')
                input.setAttribute('v-model', this.firstSepcItem)
                addOne.appendChild(input)
                let inputDivOne = document.querySelector('.inputDivOne')
                let inputCountOne = inputDivOne.querySelectorAll('input')
                if (inputCountOne.length == 6) {
                    btnOne.disabled = true
                }
            },
            addInputTwo: function () {
                let btnTwo = document.querySelector('.btnTwo')
                let addTwo = document.querySelector('.addTwo')
                let input = document.createElement('input')
                input.setAttribute('class', 'form-control inputTwo mx-2')
                //input.setAttribute('placeholder', '內容')
                input.setAttribute('placeholder', '例如: 黑、白')
                input.setAttribute('v-model', this.secondSepcItem)
                addTwo.appendChild(input)
                let inputDivTwo = document.querySelector('.inputDivTwo')
                let inputCountTwo = inputDivTwo.querySelectorAll('input')
                if (inputCountTwo.length == 6) {
                    btnTwo.disabled = true
                }
            },
            SpecificationMix: function () {
                this.isSpeMix = true
                inputOneItem = []
                inputTwoItem = []
                let mix = document.querySelector('.mix')
                let inputDivOne = document.querySelector('.inputDivOne')
                let inputDivTwo = document.querySelector('.inputDivTwo')
                let inputCountOne = inputDivOne.querySelectorAll('input')
                let inputCountTwo = inputDivTwo.querySelectorAll('input')
                inputNumberOne = []
                inputCountOne.forEach(x => {
                    if (x.value != '') {
                        inputNumberOne.push(x.value)
                    }
                })
                inputNumberTwo = []
                inputCountTwo.forEach(x => {
                    if (x.value != '') {
                        inputNumberTwo.push(x.value)
                    }
                })
                inputNumberOne.splice(0, 1)
                inputNumberTwo.splice(0, 1)
                mix.innerHTML = ''
                if (inputNumberOne.length > 0 && inputNumberTwo.length > 0) {
                    inputNumberOne.forEach(x => {
                        inputNumberTwo.forEach(y => {
                            mix.innerHTML += `<div class="d-flex justify-content-around mixDiv align-items-center">
                                                                                                                                                                                    <i class="fa-regular fa-trash-can dellIcon" ></i>
                                                                                                                                                                                                            <div class="SpecificationMixText"><span class="mixPlus firstMixArr">${x} </span> <span class="secMixArr"> ${y}</span></div>
                                                                                                                                                                                            <div><span class="yyy text-danger d-flex justify-content-end"></span><input class="form-control SpecificationMixInput mt-4" placeholder="價格" v-model="this.unitPrice" /></div>
                                                                                                                                                                            </div>`
                        })
                    })
                } else if (inputNumberOne.length > 0) {
                    inputNumberOne.forEach(x => {
                        mix.innerHTML += `<div class="d-flex justify-content-around mixDiv align-items-center">
                                                                                                                                                                                    <i class="fa-regular fa-trash-can dellIcon" ></i>
                                                                                                                                                                                            <div class="SpecificationMixText"><span  >${x}</span></div>
                                                                                                                                                                                        <div><span class="yyy text-danger d-flex justify-content-end"></span><input class="form-control SpecificationMixInput mt-4" placeholder="價格" v-model="this.unitPrice" /></div>
                                                                                                                                                                            </div>`
                    })
                } else if (inputNumberTwo.length > 0) {
                    inputNumberTwo.forEach(y => {
                        mix.innerHTML += `<div class="d-flex justify-content-around mixDiv align-items-center">
                                                                                                                                                                                    <i class="fa-regular fa-trash-can dellIcon" ></i>
                                                                                                                                                                                                <div class="SpecificationMixText"><span>${y}</span></div>
                                                                                                                                                                                        <div><span class="yyy text-danger d-flex justify-content-end"></span><input class="form-control SpecificationMixInput mt-4" placeholder="價格" v-model="this.unitPrice" /></div>
                                                                                                                                                                            </div>`
                    })
                }
                let firstMixArr = document.querySelectorAll('.firstMixArr')
                let secMixArr = document.querySelectorAll('.secMixArr')
                let del = document.querySelectorAll('.dellIcon')
                let mixDiv = document.querySelectorAll('.mixDiv')
                del.forEach((y, index) => {
                    y.addEventListener('click', () => {
                        mixDiv[index].innerHTML = ''
                    })
                });
             
                

                //firstMixArr.forEach(x =>{
                //    return inputOneItem.push(x.innerHTML)
                //})
                //secMixArr.forEach(y =>{
                //    return inputTwoItem.push(y.innerHTML)
                //})

                let SpecificationMixInput = document.querySelectorAll('.SpecificationMixInput')
                let yyy = document.querySelectorAll('.yyy')
                let r = /^[0-9]*$/
                SpecificationMixInput.forEach((x, index) => {
                    x.addEventListener('change', function (e) {
                        if (!r.test(x.value)) {
                            //加紅框
                            x.value = ''
                        } else {
                            yyy[index].innerHTML = ''

                        }
                    })
                    x.addEventListener('click', function () {
                        yyy[index].innerHTML = '請輸入數字'
                        x.classList.add("mt-3")
                        x.classList.remove("mt-4")
                    })
                })

                //抓UnitPrice 存成陣列
                let a = document.querySelectorAll('.SpecificationMixInput')
                a.forEach(x => {
                    x.addEventListener('change', () => {
                        return aa.push(x.value)
                    })
                })

                let b = document.querySelectorAll('.inputOne')
                b.forEach(y => {
                    return inputOneItem.push(y.value)
                })

                let c = document.querySelectorAll('.inputTwo')
                c.forEach(z => {
                    return inputTwoItem.push(z.value)
                })
            },
            previewImage: function (event) {
                let input = event.target  //輸入進去的照片
                let count = input.files.length  //輸入進去幾張照片
                let index = 0
                if (input.files) {
                    while (count--) {
                        let reader = new FileReader(); //把檔案轉成base64
                        reader.onload = (e) => {
                            this.preview_list.push(e.target.result)
                        }
                        //顯示畫面
                        if (this.image_list.length < 4) {
                            this.image_list.push(input.files[index])
                            reader.readAsDataURL(input.files[index])
                            index++
                        }
                    }
                }
            },
            changeCatefory: function () {
                let selectCategory = document.querySelector('#selectCategory')
                let subCategoryOption = document.querySelectorAll('.subCategoryOption')
                let selectSubCategory = document.querySelector('.sub-category')
                bigValue = selectCategory.options[selectCategory.selectedIndex].value
                subCategoryOption.forEach(y => {
                    let a = y.getAttribute("data-num")
                    if (a == bigValue) {
                        y.classList.remove("d-none")
                        selectSubCategory.disabled = false
                    } else {
                        y.classList.add("d-none")
                    }
                });
            },
            clearImg: function () {
                this.preview_list = []
                let box = document.querySelector('.box')
                if (this.preview_list == '') {
                    box.innerHTML = ''
                }
            },
            record: function () {
                let a = this
                a.isbusy = true
                $.ajax({
                    url: '@Url.Action("Create","Product")',
                    type: 'POST',
                    data: {
                        ProductName: a.nameVal,
                        Price: a.priceVal,
                        SubCategoryName: a.subCategory,
                        FirstSpecification: a.firstSpecification,
                        SecondSpecification: a.secondSpecification,
                        FirstSepcItem: inputOneItem,
                        SecondSepcItem: inputTwoItem,
                        UnitPrice: aa,
                        Description: a.description,
                        MadeCountry: a.madeCountry,
                        Editor: ff.innerHTML,
                        TagName: tagArr,
                        Img: a.preview_list
                    },
                    success: function (json) {
                        a.isbusy = false
                        let result = json
                        let index = 0;
                        index = result.id;
                        if (result.isCreate == "") {
                            window.location.href = `/Product/Preview/${index}`
                        }
                        else {
                            warntext = result.isCreate
                            alert(warntext)
                        }
                    }
                })
            }
        }

    })
    let tagOne = document.querySelectorAll('.tagOne')
    tagOne.forEach(x => {
        x.addEventListener('click', () => {
            if (x.checked == true) {
                tagSet.add(x.value)
                return tagArr = [...tagSet]
            }
            else if (x.checked != true) {
                tagSet.forEach((y, index) => {
                    if (x.value == y)
                        tagSet.delete(y)
                    return tagArr = [...tagSet]
                })
            }
        })

    })


</script>


@section topCSS{
    <link href="~/css/product/create.css" rel="stylesheet" />
    <link href="~/css/product/sort.css" rel="stylesheet" />
    }

@section endJS{
    <script src="~/js/product/neweditor.js"></script>
    <script src="~/js/product/gettext.js"></script>
    }
